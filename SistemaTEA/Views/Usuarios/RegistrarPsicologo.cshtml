@model SistemaTEA.Models.Usuario
@{
    Layout = null;
    ViewData["Title"] = "Registrar Psicólogo";
}
<!DOCTYPE html>

<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registrar Psicólogo - Sistema TEA</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .header {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(15px);
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

            .header h1 {
                color: white;
                font-size: 1.6rem;
                font-weight: 300;
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

                .header h1 i {
                    color: #ffd700;
                }

        .header-right {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .user-info {
            background: rgba(255, 255, 255, 0.2);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            color: white;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-back {
            padding: 0.6rem 1.2rem;
            background: rgba(108, 117, 125, 0.9);
            color: white;
            border: none;
            border-radius: 20px;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
        }

            .btn-back:hover {
                background: rgba(108, 117, 125, 1);
                transform: translateY(-2px);
            }

        .main-container {
            padding: 2rem;
            max-width: 800px;
            margin: 0 auto;
        }

        .form-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            border-top: 4px solid #667eea;
        }

        .form-header {
            text-align: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #e2e8f0;
        }

            .form-header h2 {
                color: #4a5568;
                font-size: 1.8rem;
                font-weight: 300;
                margin-bottom: 0.5rem;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 0.5rem;
            }

                .form-header h2 i {
                    color: #667eea;
                }

            .form-header p {
                color: #718096;
                font-size: 0.95rem;
            }

        .alert {
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
            animation: slideIn 0.3s ease-out;
        }

        .alert-success {
            background: #d4edda;
            color: #155724;
            border-left: 4px solid #28a745;
        }

        .alert-danger {
            background: #f8d7da;
            color: #721c24;
            border-left: 4px solid #dc3545;
        }

        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

            .form-group.full-width {
                grid-column: 1 / -1;
            }

        .form-label {
            font-weight: 600;
            color: #4a5568;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
        }

            .form-label i {
                color: #667eea;
            }

        .form-input {
            padding: 0.8rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: white;
        }

            .form-input:focus {
                outline: none;
                border-color: #667eea;
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            }

            .form-input.error {
                border-color: #f56565;
            }

            .form-input.valid {
                border-color: #48bb78;
            }

        .password-container {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #718096;
            cursor: pointer;
            padding: 0.5rem;
        }

            .password-toggle:hover {
                color: #4a5568;
            }

        .password-strength {
            margin-top: 0.5rem;
            padding: 0.5rem;
            border-radius: 5px;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .strength-weak {
            background: #fed7d7;
            color: #c53030;
        }

        .strength-medium {
            background: #feebc8;
            color: #dd6b20;
        }

        .strength-strong {
            background: #c6f6d5;
            color: #2f855a;
        }

        .validation-message {
            margin-top: 0.3rem;
            font-size: 0.8rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.3rem;
        }

            .validation-message.success {
                color: #2f855a;
            }

            .validation-message.error {
                color: #c53030;
            }

        .btn-container {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
        }

        .btn {
            padding: 0.8rem 2rem;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
            min-width: 140px;
            justify-content: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .btn-secondary {
            background: #f8f9fa;
            color: #6c757d;
            border: 2px solid #dee2e6;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .loading-spinner {
            display: none;
            width: 16px;
            height: 16px;
            border: 2px solid transparent;
            border-top: 2px solid currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            to

        {
            transform: rotate(360deg);
        }

        }

        @@keyframes slideIn {
            from

        {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        @@media (max-width: 768px) {
            .main-container

        {
            padding: 1rem;
        }

        .header {
            padding: 1rem;
            flex-direction: column;
            gap: 1rem;
        }

        .form-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .form-container {
            padding: 1.5rem;
        }

        .btn-container {
            flex-direction: column;
        }

        .btn {
            width: 100%;
        }

        }
    </style>
</head>
<body>
    <div class="header">
        <h1><i class="fas fa-brain"></i> Sistema TEA - Registrar Psicólogo</h1>
        <div class="header-right">
            <a href="@Url.Action("InicioADMIN", "Login")" class="btn-back">
                <i class="fas fa-arrow-left"></i> Volver
            </a>
        </div>
    </div>

    <div class="main-container">
        <div class="form-container">
            <div class="form-header">
                <h2><i class="fas fa-user-md"></i> Registrar Nuevo Psicólogo</h2>
                <p>Complete los datos del profesional para crear su cuenta</p>
            </div>

            <div id="alertContainer"></div>

            <form id="psicologoForm" autocomplete="off">
                @Html.AntiForgeryToken()

                <div class="form-grid">
                    <div class="form-group">
                        <label class="form-label" for="Nombre">
                            <i class="fas fa-user"></i> Nombre *
                        </label>
                        <input type="text"
                               class="form-input"
                               id="Nombre"
                               name="Nombre"
                               required
                               maxlength="50"
                               autocomplete="off"
                               placeholder="Ingrese el nombre">
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="Apellido">
                            <i class="fas fa-user"></i> Apellido *
                        </label>
                        <input type="text"
                               class="form-input"
                               id="Apellido"
                               name="Apellido"
                               required
                               maxlength="50"
                               autocomplete="off"
                               placeholder="Ingrese el apellido">
                    </div>

                    <div class="form-group full-width">
                        <label class="form-label" for="Email">
                            <i class="fas fa-envelope"></i> Correo Electrónico *
                        </label>
                        <input type="email"
                               class="form-input"
                               id="Email"
                               name="Email"
                               required
                               maxlength="100"
                               autocomplete="off"
                               placeholder="correo@ejemplo.com">
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="Telefono">
                            <i class="fas fa-phone"></i> Teléfono
                        </label>
                        <input type="tel"
                               class="form-input"
                               id="Telefono"
                               name="Telefono"
                               maxlength="15"
                               autocomplete="off"
                               placeholder="+503 7777-7777">
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="Contraseña">
                            <i class="fas fa-lock"></i> Contraseña *
                        </label>
                        <div class="password-container">
                            <input type="password"
                                   class="form-input"
                                   id="Contraseña"
                                   name="Contraseña"
                                   required
                                   minlength="6"
                                   autocomplete="new-password"
                                   placeholder="Mínimo 6 caracteres">
                            <button type="button" class="password-toggle" onclick="togglePassword('Contraseña', 'toggleIcon1')">
                                <i class="fas fa-eye" id="toggleIcon1"></i>
                            </button>
                        </div>
                        <div id="passwordStrength" class="password-strength" style="display: none;"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="confirmarContrasena">
                            <i class="fas fa-lock"></i> Confirmar Contraseña *
                        </label>
                        <div class="password-container">
                            <input type="password"
                                   class="form-input"
                                   id="confirmarContrasena"
                                   name="confirmarContrasena"
                                   required
                                   minlength="6"
                                   autocomplete="new-password"
                                   placeholder="Confirme la contraseña">
                            <button type="button" class="password-toggle" onclick="togglePassword('confirmarContrasena', 'toggleIcon2')">
                                <i class="fas fa-eye" id="toggleIcon2"></i>
                            </button>
                        </div>
                        <div id="passwordMatch" class="validation-message"></div>
                    </div>
                </div>

                <div class="btn-container">
                    <button type="submit" class="btn btn-primary" id="submitBtn">
                        <span class="loading-spinner" id="loadingSpinner"></span>
                        <i class="fas fa-user-plus" id="submitIcon"></i>
                        <span id="submitText">Registrar Psicólogo</span>
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="limpiarFormulario()">
                        <i class="fas fa-broom"></i> Limpiar
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('psicologoForm');
            const password = document.getElementById('Contraseña');
            const confirmPassword = document.getElementById('confirmarContrasena');

            // Validación en tiempo real
            const requiredFields = ['Nombre', 'Apellido', 'Email', 'Contraseña'];

            requiredFields.forEach(fieldName => {
                const field = document.getElementById(fieldName);
                if (field) {
                    field.addEventListener('input', () => validateField(field));
                }
            });

            function validateField(field) {
                const value = field.value.trim();
                if (field.required && !value) {
                    field.classList.add('error');
                    field.classList.remove('valid');
                } else if (value) {
                    field.classList.add('valid');
                    field.classList.remove('error');
                }
            }

            // Validar fortaleza de contraseña
            password.addEventListener('input', function() {
                const strength = checkPasswordStrength(this.value);
                const strengthDiv = document.getElementById('passwordStrength');

                if (this.value.length > 0) {
                    strengthDiv.style.display = 'block';
                    strengthDiv.className = 'password-strength ' + strength.class;
                    strengthDiv.innerHTML = '<i class="fas fa-shield-alt"></i> ' + strength.text;
                } else {
                    strengthDiv.style.display = 'none';
                }
                checkPasswordMatch();
            });

            confirmPassword.addEventListener('input', checkPasswordMatch);

            function checkPasswordMatch() {
                const matchDiv = document.getElementById('passwordMatch');
                if (confirmPassword.value.length > 0) {
                    if (password.value === confirmPassword.value) {
                        matchDiv.innerHTML = '<i class="fas fa-check"></i> Las contraseñas coinciden';
                        matchDiv.className = 'validation-message success';
                        confirmPassword.classList.remove('error');
                        confirmPassword.classList.add('valid');
                    } else {
                        matchDiv.innerHTML = '<i class="fas fa-times"></i> Las contraseñas no coinciden';
                        matchDiv.className = 'validation-message error';
                        confirmPassword.classList.add('error');
                        confirmPassword.classList.remove('valid');
                    }
                } else {
                    matchDiv.innerHTML = '';
                    confirmPassword.classList.remove('error', 'valid');
                }
            }

            function checkPasswordStrength(password) {
                let score = 0;
                if (password.length >= 8) score++;
                if (/[a-z]/.test(password)) score++;
                if (/[A-Z]/.test(password)) score++;
                if (/[0-9]/.test(password)) score++;
                if (/[^a-zA-Z0-9]/.test(password)) score++;

                if (score < 2) {
                    return { class: 'strength-weak', text: 'Débil' };
                } else if (score < 4) {
                    return { class: 'strength-medium', text: 'Moderada' };
                } else {
                    return { class: 'strength-strong', text: 'Fuerte' };
                }
            }

            // Envío del formulario con AJAX
            form.addEventListener('submit', function(e) {
                e.preventDefault();

                // Validar contraseñas
                if (password.value !== confirmPassword.value) {
                    showAlert('Las contraseñas no coinciden', 'error');
                    return;
                }

                // Validar campos requeridos
                let hasErrors = false;
                requiredFields.forEach(fieldName => {
                    const field = document.getElementById(fieldName);
                    if (field && !field.value.trim()) {
                        field.classList.add('error');
                        hasErrors = true;
                    }
                });

                if (hasErrors) {
                    showAlert('Complete todos los campos requeridos', 'error');
                    return;
                }

                setLoadingState(true);

                // Enviar datos con AJAX
                const formData = new FormData(form);

                fetch('@Url.Action("RegistrarPsicologo", "Usuarios")', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    setLoadingState(false);
                    if (data.success) {
                        showAlert('Psicólogo registrado exitosamente', 'success');
                        limpiarFormulario();
                    } 
                })
                .catch(error => {
                    setLoadingState(false);
                    showAlert('Error de conexión. Intente nuevamente', 'error');
                });
            });

            function setLoadingState(loading) {
                const submitBtn = document.getElementById('submitBtn');
                const spinner = document.getElementById('loadingSpinner');
                const icon = document.getElementById('submitIcon');
                const text = document.getElementById('submitText');

                if (loading) {
                    submitBtn.disabled = true;
                    spinner.style.display = 'inline-block';
                    icon.style.display = 'none';
                    text.textContent = 'Registrando...';
                } else {
                    submitBtn.disabled = false;
                    spinner.style.display = 'none';
                    icon.style.display = 'inline-block';
                    text.textContent = 'Registrar Psicólogo';
                }
            }

            function showAlert(message, type) {
                const alertContainer = document.getElementById('alertContainer');
                const alertDiv = document.createElement('div');
                alertDiv.className = `alert alert-${type === 'error' ? 'danger' : 'success'}`;
                alertDiv.innerHTML = `
                    <i class="fas fa-${type === 'error' ? 'exclamation-triangle' : 'check-circle'}"></i>
                    ${message}
                `;

                alertContainer.innerHTML = '';
                alertContainer.appendChild(alertDiv);

                setTimeout(() => {
                    alertDiv.remove();
                }, 5000);
            }

            // Hacer función global para uso en onclick
            window.showAlert = showAlert;
        });

        function togglePassword(inputId, iconId) {
            const input = document.getElementById(inputId);
            const icon = document.getElementById(iconId);

            if (input.type === 'password') {
                input.type = 'text';
                icon.className = 'fas fa-eye-slash';
            } else {
                input.type = 'password';
                icon.className = 'fas fa-eye';
            }
        }

        function limpiarFormulario() {
            document.getElementById('psicologoForm').reset();
            document.getElementById('alertContainer').innerHTML = '';
            document.getElementById('passwordStrength').style.display = 'none';
            document.getElementById('passwordMatch').innerHTML = '';

            const inputs = document.querySelectorAll('.form-input');
            inputs.forEach(input => {
                input.classList.remove('valid', 'error');
            });

            showAlert('Formulario limpiado', 'success');
        }
    </script>
</body>
</html>