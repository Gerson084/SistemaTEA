@model List<SistemaTEA.Models.Usuario>
@{
    ViewData["Title"] = "Psicólogos Registrados";
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Psicólogos Registrados - Sistema TEA</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 1.5rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

            .header h1 {
                color: white;
                font-size: 1.8rem;
                font-weight: 300;
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

        .breadcrumb {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.9rem;
        }

            .breadcrumb a {
                color: rgba(255, 255, 255, 0.9);
                text-decoration: none;
                transition: color 0.3s ease;
            }

                .breadcrumb a:hover {
                    color: white;
                }

        .main-container {
            padding: 2rem;
            max-width: 1400px;
            margin: 0 auto;
        }

        .page-header {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .page-title {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

            .page-title h2 {
                color: #4a5568;
                font-size: 2rem;
                font-weight: 300;
                margin: 0;
            }

            .page-title .icon {
                width: 60px;
                height: 60px;
                background: linear-gradient(135deg, #3182ce 0%, #2b77cb 100%);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                color: white;
                font-size: 1.5rem;
            }

        .stats-summary {
            display: flex;
            align-items: center;
            gap: 2rem;
            background: #f7fafc;
            padding: 1rem 1.5rem;
            border-radius: 15px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 1.8rem;
            font-weight: bold;
            color: #3182ce;
        }

        .stat-label {
            color: #718096;
            font-size: 0.9rem;
        }

        .search-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .search-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .search-input {
            flex: 1;
            min-width: 250px;
            padding: 0.8rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

            .search-input:focus {
                outline: none;
                border-color: #667eea;
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            }

        .filter-select {
            padding: 0.8rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1rem;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .filter-select:focus {
                outline: none;
                border-color: #667eea;
            }

        .psicologos-table-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 0;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .table-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1.5rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.2rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .add-btn {
            padding: 0.5rem 1rem;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

            .add-btn:hover {
                background: rgba(255, 255, 255, 0.3);
                color: white;
                text-decoration: none;
            }

        .psicologos-table {
            width: 100%;
            border-collapse: collapse;
        }

            .psicologos-table thead {
                background: #f8fafc;
            }

            .psicologos-table th {
                padding: 1rem 1.5rem;
                text-align: left;
                font-weight: 600;
                color: #4a5568;
                border-bottom: 2px solid #e2e8f0;
                font-size: 0.9rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }

            .psicologos-table td {
                padding: 1.2rem 1.5rem;
                border-bottom: 1px solid #e2e8f0;
                transition: background-color 0.3s ease;
            }

            .psicologos-table tbody tr:hover {
                background-color: #f7fafc;
            }

        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .user-avatar {
            width: 45px;
            height: 45px;
            background: linear-gradient(135deg, #3182ce 0%, #2b77cb 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 1.1rem;
        }

        .user-details h4 {
            margin: 0;
            color: #2d3748;
            font-size: 1rem;
            font-weight: 600;
        }

        .user-details p {
            margin: 0;
            color: #718096;
            font-size: 0.9rem;
        }

        .contact-info {
            color: #4a5568;
        }

            .contact-info i {
                color: #718096;
                margin-right: 0.5rem;
                width: 16px;
            }

        .registration-date {
            color: #4a5568;
            font-weight: 500;
        }

        .status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-active {
            background: #c6f6d5;
            color: #22543d;
        }

        .status-inactive {
            background: #fed7d7;
            color: #c53030;
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .btn-action {
            padding: 0.5rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9rem;
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .btn-view {
            background: #e2e8f0;
            color: #4a5568;
        }

            .btn-view:hover {
                background: #cbd5e0;
                transform: translateY(-2px);
            }

        .btn-toggle {
            background: #fbb6ce;
            color: #97266d;
        }

            .btn-toggle:hover {
                background: #f687b3;
                transform: translateY(-2px);
            }

            .btn-toggle.inactive {
                background: #c6f6d5;
                color: #22543d;
            }

        .navigation-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.95);
            color: #4a5568;
            border: 2px solid #e2e8f0;
        }

            .btn-secondary:hover {
                background: white;
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
                color: #4a5568;
                text-decoration: none;
            }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
                color: white;
                text-decoration: none;
            }

        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #718096;
        }

            .empty-state i {
                font-size: 4rem;
                margin-bottom: 1rem;
                color: #cbd5e0;
            }

            .empty-state h3 {
                margin-bottom: 0.5rem;
                color: #4a5568;
            }

        @@media (max-width: 768px) {
            .main-container

        {
            padding: 1rem;
        }

        .header {
            padding: 1rem;
            flex-direction: column;
            gap: 1rem;
            text-align: center;
        }

        .page-header {
            flex-direction: column;
            text-align: center;
        }

        .search-controls {
            flex-direction: column;
        }

        .search-input {
            min-width: 100%;
        }

        .psicologos-table-container {
            overflow-x: auto;
        }

        .psicologos-table {
            min-width: 800px;
        }

        .navigation-section {
            flex-direction: column;
            gap: 1rem;
        }

        }</style>
</head>
<body>
    <div class="header">
        <h1><i class="fas fa-brain"></i> Sistema TEA</h1>
        <div class="navigation-section">
            <a class="btn btn-secondary" href="@Url.Action("InicioADMIN", "Login")">
                <i class="fas fa-arrow-left"></i> Volver al Inicio
            </a>
        </div>
    </div>

    <div class="main-container">
        <div class="page-header">
            <div class="page-title">
                <div class="icon">
                    <i class="fas fa-user-md"></i>
                </div>
                <div>
                    <h2>Psicólogos Registrados</h2>
                    <p style="margin: 0; color: #718096;">Gestión de profesionales de la salud mental en el sistema</p>
                </div>
            </div>
            <div class="stats-summary">
                <div class="stat-item">
                    <div class="stat-number" id="totalPsicologos">@Model.Count</div>
                    <div class="stat-label">Total Registrados</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="activePsicologos">@Model.Count(p => p.EsActivo)</div>
                    <div class="stat-label">Activos</div>
                </div>
            </div>
        </div>

        <div class="search-section">
            <div class="search-controls">
                <input type="text" id="searchInput" class="search-input" placeholder="Buscar por nombre, apellido o email...">
            </div>
        </div>

        <div class="psicologos-table-container">
            <div class="table-header">
                <div class="table-title">
                    <i class="fas fa-list"></i>
                    Lista de Psicólogos
                </div>
                <a href="@Url.Action("RegistrarPsicologo", "Usuarios")" class="add-btn">
                    <i class="fas fa-plus"></i>
                    Agregar Psicólogo
                </a>
            </div>

            @if (Model != null && Model.Any())
            {
                <table class="psicologos-table" id="psicologosTable">
                    <thead>
                        <tr>
                            <th>Psicólogo</th>
                            <th>Información de Contacto</th>
                            <th>Fecha de Registro</th>
                            <th>Fecha de Aprobación</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var psicologo in Model)
                        {
                            <tr class="psicologo-row" data-status="@(psicologo.EsActivo ? "active" : "inactive")">
                                <td>
                                    <div class="user-info">
                                        <div class="user-avatar">
                                            @(psicologo.Nombre.Substring(0, 1).ToUpper())@(psicologo.Apellido.Substring(0, 1).ToUpper())
                                        </div>
                                        <div class="user-details">
                                            <h4>@psicologo.Nombre @psicologo.Apellido</h4>
                                            <p>ID: @psicologo.UsuarioID</p>
                                        </div>
                                    </div>
                                </td>
                                <td class="contact-info">
                                    <div style="margin-bottom: 0.5rem;">
                                        <i class="fas fa-envelope"></i>
                                        @psicologo.Email
                                    </div>
                                    @if (!string.IsNullOrEmpty(psicologo.Telefono))
                                    {
                                        <div>
                                            <i class="fas fa-phone"></i>
                                            @psicologo.Telefono
                                        </div>
                                    }
                                </td>
                                <td class="registration-date">
                                    @psicologo.FechaRegistro.ToString("dd/MM/yyyy")
                                    <br>
                                    <small style="color: #718096;">@psicologo.FechaRegistro.ToString("HH:mm")</small>
                                </td>
                                <td class="registration-date">
                                    @if (psicologo.FechaAprobacion.HasValue)
                                    {
                                        @psicologo.FechaAprobacion.Value.ToString("dd/MM/yyyy")
                                        <br>
                                        <small style="color: #718096;">@psicologo.FechaAprobacion.Value.ToString("HH:mm")</small>
                                    }
                                    else
                                    {
                                        <span style="color: #718096;">Sin aprobar</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-user-md"></i>
                    <h3>No hay psicólogos registrados</h3>
                    <p>Actualmente no existen psicólogos registrados en el sistema.</p>
                    <div style="margin-top: 1.5rem;">
                        <a href="@Url.Action("RegistrarPsicologo", "Usuarios")" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Registrar Primer Psicólogo
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initializeSearch();
            initializeFilters();
            animateCards();
        });

        function initializeSearch() {
            const searchInput = document.getElementById('searchInput');
            const rows = document.querySelectorAll('.psicologo-row');

            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();

                rows.forEach(row => {
                    const text = row.textContent.toLowerCase();
                    if (text.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });

                updateVisibleCount();
            });
        }

        function initializeFilters() {
            const statusFilter = document.getElementById('statusFilter');
            const rows = document.querySelectorAll('.psicologo-row');

            statusFilter.addEventListener('change', function() {
                const filterValue = this.value;

                rows.forEach(row => {
                    const status = row.getAttribute('data-status');

                    if (filterValue === '' || filterValue === status) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });

                updateVisibleCount();
            });
        }

        function animateCards() {
            const rows = document.querySelectorAll('.psicologo-row');
            rows.forEach((row, index) => {
                row.style.opacity = '0';
                row.style.transform = 'translateY(20px)';

                setTimeout(() => {
                    row.style.transition = 'all 0.6s ease';
                    row.style.opacity = '1';
                    row.style.transform = 'translateY(0)';
                }, index * 50);
            });
        }

        function updateVisibleCount() {
            const hiddenRows = document.querySelectorAll('.psicologo-row[style*="display: none"]').length;
            const totalRows = document.querySelectorAll('.psicologo-row').length;
            const visibleCount = totalRows - hiddenRows;

            const counter = document.getElementById('totalPsicologos');
            if (counter) {
                counter.textContent = visibleCount;
            }
        }

        function viewPsicologo(psicologoId) {
            fetch(`/Usuarios/ObtenerDetallesPsicologo?usuarioId=${psicologoId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const psicologo = data.psicologo;
                        const modal = `
                            <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; display: flex; align-items: center; justify-content: center;" onclick="this.remove()">
                                <div style="background: white; padding: 2rem; border-radius: 15px; max-width: 500px; width: 90%;" onclick="event.stopPropagation()">
                                    <h3 style="margin-bottom: 1rem; color: #2d3748;">Detalles del Psicólogo</h3>
                                    <p><strong>Nombre:</strong> ${psicologo.nombre} ${psicologo.apellido}</p>
                                    <p><strong>Email:</strong> ${psicologo.email}</p>
                                    <p><strong>Teléfono:</strong> ${psicologo.telefono || 'No especificado'}</p>
                                    <p><strong>Fecha de Registro:</strong> ${new Date(psicologo.fechaRegistro).toLocaleDateString()}</p>
                                    <p><strong>Fecha de Aprobación:</strong> ${psicologo.fechaAprobacion ? new Date(psicologo.fechaAprobacion).toLocaleDateString() : 'Sin aprobar'}</p>
                                    <p><strong>Estado:</strong> ${psicologo.esActivo ? 'Activo' : 'Inactivo'}</p>
                                    <button onclick="this.closest('div[style*=\"position: fixed\"]').remove()" style="margin-top: 1rem; padding: 0.5rem 1rem; background: #667eea; color: white; border: none; border-radius: 5px; cursor: pointer;">Cerrar</button>
                                </div>
                            </div>
                        `;
                        document.body.insertAdjacentHTML('beforeend', modal);
                    } else {
                        alert('Error al cargar los detalles: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al cargar los detalles del psicólogo');
                });
        }

        function togglePsicologoStatus(psicologoId, currentStatus) {
            const newStatus = !currentStatus;
            const action = newStatus ? 'activar' : 'desactivar';

            if (confirm(`¿Está seguro de que desea ${action} este psicólogo?`)) {
                fetch('/Usuarios/CambiarEstadoPsicologo', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `usuarioId=${psicologoId}&activar=${newStatus}`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al cambiar el estado del psicólogo');
                });
            }
        }
    </script>
</body>
</html>