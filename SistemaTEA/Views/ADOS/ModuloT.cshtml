@model SistemaTEA.ViewModels.ADOSEvaluacionViewModel

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cuestionario ADOS</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-purple: #8B5CF6;
            --light-purple: #A78BFA;
            --pale-purple: #F3F4F6;
            --purple-bg: #FAF5FF;
            --text-dark: #374151;
            --border-color: #E5E7EB;
            --success-color: #10B981;
            --warning-color: #F59E0B;
            --info-color: #3B82F6;
        }

        body {
            background: linear-gradient(135deg, #FAF5FF 0%, #F8FAFC 100%);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: var(--text-dark);
            min-height: 100vh;
        }

        .main-container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }

        .header-section {
            text-align: center;
            margin-bottom: 3rem;
            padding: 2rem;
            background: linear-gradient(135deg, var(--primary-purple), var(--light-purple));
            border-radius: 20px;
            color: white;
            box-shadow: 0 10px 30px rgba(139, 92, 246, 0.3);
        }

            .header-section h1 {
                font-size: 2.5rem;
                font-weight: 700;
                margin-bottom: 0.5rem;
                text-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }

            .header-section p {
                font-size: 1.1rem;
                opacity: 0.9;
                margin: 0;
            }

        .question-card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 4px 20px rgba(139, 92, 246, 0.1);
            margin-bottom: 2rem;
            overflow: hidden;
            border: 1px solid rgba(139, 92, 246, 0.1);
            transition: all 0.3s ease;
        }

            .question-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 30px rgba(139, 92, 246, 0.15);
            }

        .question-header {
            background: linear-gradient(135deg, var(--purple-bg), #FFFFFF);
            padding: 1.5rem;
            border-bottom: 2px solid rgba(139, 92, 246, 0.1);
        }

        .question-number {
            background: var(--primary-purple);
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 1rem;
            font-size: 1.1rem;
        }

        .question-text {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--text-dark);
            line-height: 1.5;
        }

        .question-type {
            background: var(--light-purple);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            margin-left: 1rem;
        }

        .question-body {
            padding: 2rem;
        }

        .form-section {
            margin-bottom: 1.5rem;
        }

        .form-label {
            font-weight: 600;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

            .form-label.primary {
                color: var(--primary-purple);
            }

            .form-label.success {
                color: var(--success-color);
            }

            .form-label.warning {
                color: var(--warning-color);
            }

            .form-label.info {
                color: var(--info-color);
            }

        .form-control, .form-select {
            border: 2px solid var(--border-color);
            border-radius: 10px;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

            .form-control:focus, .form-select:focus {
                border-color: var(--primary-purple);
                box-shadow: 0 0 0 0.2rem rgba(139, 92, 246, 0.25);
            }

        .form-select {
            background-color: white;
            cursor: pointer;
        }

        .textarea-field {
            min-height: 80px;
            resize: vertical;
        }

            .textarea-field.large {
                min-height: 120px;
            }

        .submit-section {
            text-align: center;
            margin-top: 3rem;
            padding: 2rem;
            background: white;
            border-radius: 16px;
            box-shadow: 0 4px 20px rgba(139, 92, 246, 0.1);
        }

        .btn-submit {
            background: linear-gradient(135deg, var(--primary-purple), var(--light-purple));
            border: none;
            color: white;
            padding: 1rem 3rem;
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(139, 92, 246, 0.3);
        }

            .btn-submit:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(139, 92, 246, 0.4);
            }

        .progress-indicator {
            background: white;
            border-radius: 12px;
            padding: 1rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 10px rgba(139, 92, 246, 0.1);
        }

        .progress-bar {
            background: var(--primary-purple);
            height: 6px;
            border-radius: 3px;
            transition: width 0.3s ease;
        }

        .icon {
            color: var(--primary-purple);
        }

            .icon.success {
                color: var(--success-color);
            }

            .icon.warning {
                color: var(--warning-color);
            }

            .icon.info {
                color: var(--info-color);
            }

        .input-text {
            width: 100%;
        }

        .input-number {
            width: 200px;
        }

        .radio-group {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .radio-option {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .radio-option:hover {
                border-color: var(--light-purple);
                background: var(--purple-bg);
            }

            .radio-option input[type="radio"]:checked + label {
                color: var(--primary-purple);
                font-weight: 600;
            }

        .section-divider {
            height: 1px;
            background: linear-gradient(90deg, transparent, var(--border-color), transparent);
            margin: 1.5rem 0;
        }

        .evaluation-sections {
            display: grid;
            gap: 1.5rem;
        }

        .score-input {
            width: 100px;
            text-align: center;
            font-weight: bold;
            font-size: 1.1rem;
        }

            .score-input:focus {
                border-color: var(--success-color);
                box-shadow: 0 0 0 0.2rem rgba(16, 185, 129, 0.25);
            }

        .scoring-guide {
            background: rgba(255, 255, 255, 0.15);
            border-radius: 16px;
            padding: 1.5rem;
            margin-top: 2rem;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

            .scoring-guide h3 {
                font-size: 1.3rem;
                font-weight: 600;
                margin-bottom: 1.5rem;
                text-align: center;
                color: white;
            }

        .scoring-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
        }

        .score-item {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 12px;
            padding: 1rem;
            display: flex;
            align-items: flex-start;
            gap: 1rem;
            transition: transform 0.2s ease;
            border: 2px solid transparent;
        }

            .score-item:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            }

        .score-badge {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            font-weight: bold;
            color: white;
            flex-shrink: 0;
        }

        .score-0 .score-badge {
            background: #10B981;
        }

        .score-1 .score-badge {
            background: #F59E0B;
        }

        .score-2 .score-badge {
            background: #EF4444;
        }

        .score-3 .score-badge {
            background: #7C2D12;
        }

        .score-0:hover {
            border-color: #10B981;
        }

        .score-1:hover {
            border-color: #F59E0B;
        }

        .score-2:hover {
            border-color: #EF4444;
        }

        .score-3:hover {
            border-color: #7C2D12;
        }

        .score-content {
            flex: 1;
        }

            .score-content strong {
                color: var(--text-dark);
                font-size: 1rem;
                display: block;
                margin-bottom: 0.25rem;
            }

            .score-content p {
                color: #6B7280;
                font-size: 0.9rem;
                margin: 0;
                line-height: 1.4;
            }

        /* Botón de guardado individual */
        .btn-save-individual {
            background: linear-gradient(135deg, #059669, #10B981);
            border: none;
            color: white;
            padding: 0.5rem 1.5rem;
            font-size: 0.9rem;
            font-weight: 500;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(5, 150, 105, 0.3);
        }

            .btn-save-individual:hover {
                transform: translateY(-1px);
                box-shadow: 0 4px 15px rgba(5, 150, 105, 0.4);
            }

            .btn-save-individual:disabled {
                opacity: 0.6;
                cursor: not-allowed;
                transform: none;
            }

        /* Indicador de estado guardado */
        .save-status {
            display: none;
            margin-top: 10px;
            padding: 8px 12px;
            border-radius: 6px;
            font-size: 0.85rem;
            text-align: center;
        }

            .save-status.success {
                background: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
                display: block;
            }

            .save-status.error {
                background: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
                display: block;
            }

        @@media (max-width: 768px) {
            .main-container

        {
            padding: 1rem;
        }

        .header-section h1 {
            font-size: 2rem;
        }

        .question-header {
            padding: 1rem;
        }

        .question-body {
            padding: 1.5rem;
        }

        .radio-group {
            flex-direction: column;
        }

        .evaluation-sections {
            grid-template-columns: 1fr;
        }

        .scoring-grid {
            grid-template-columns: 1fr;
        }

        .scoring-guide {
            padding: 1rem;
        }

        }

        @@media (min-width: 769px) {
            .evaluation-sections

        {
            grid-template-columns: 1fr 1fr;
        }

        }</style>
</head>
<body>
    <div class="main-container">
        <!-- Header Section -->
        <div class="header-section">
            <h1><i class="fas fa-clipboard-check"></i> Evaluación ADOS Módulo T</h1>
            <p>Evaluación del Trastorno del Espectro Autista</p>

            <!-- Guía de Puntuación -->
            <div class="scoring-guide">
                <h3><i class="fas fa-info-circle"></i> Guía de Puntuación (Escala 0-3)</h3>
                <div class="scoring-grid">
                    <div class="score-item score-0">
                        <div class="score-badge">0</div>
                        <div class="score-content">
                            <strong>Conducta Típica</strong>
                            <p>No hay signos de alteración en esta área. Comportamiento esperado para el desarrollo.</p>
                        </div>
                    </div>
                    <div class="score-item score-1">
                        <div class="score-badge">1</div>
                        <div class="score-content">
                            <strong>Ligeramente Atípica</strong>
                            <p>Conducta limitada, pero no clínicamente significativa. Puede observarse en algunos niños sin TEA.</p>
                        </div>
                    </div>
                    <div class="score-item score-2">
                        <div class="score-badge">2</div>
                        <div class="score-content">
                            <strong>Claramente Inusual</strong>
                            <p>Conducta afectada, fuera del rango esperado para el desarrollo típico.</p>
                        </div>
                    </div>
                    <div class="score-item score-3">
                        <div class="score-badge">3</div>
                        <div class="score-content">
                            <strong>Marcadamente Anormal</strong>
                            <p>Ausencia total de la conducta esperada. Sugiere dificultad significativa en esa área.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Progress Indicator -->
        <div class="progress-indicator">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <span class="fw-semibold">Progreso de la evaluación</span>
                <span class="text-muted" id="progress-text">0% completado</span>
            </div>
            <div class="progress" style="height: 6px; border-radius: 3px;">
                <div class="progress-bar" id="progress-bar" style="width: 0%"></div>
            </div>
        </div>

        <!-- Form Container (sin formulario principal, solo contenedor) -->
        <!-- Form Container (sin formulario principal, solo contenedor) -->
<div id="adosForm">
    <input type="hidden" name="EvaluacionID" value="@Model.EvaluacionID" />

    @for (int i = 0; i < Model.Preguntas.Count(); i++)
    {
        var pregunta = Model.Preguntas.ElementAt(i);

        
            var respuestaGuardada = ViewBag.RespuestasGuardadas != null ? 
                ((List<RespuestaADOS2>)ViewBag.RespuestasGuardadas).FirstOrDefault(r => r.PreguntaID == pregunta.PreguntaID) : null;
            var estaGuardada = respuestaGuardada != null;
        

        <div class="question-card @(estaGuardada ? "question-saved" : "")" data-pregunta-id="@pregunta.PreguntaID">
            <div class="question-header">
                <div class="d-flex align-items-center flex-wrap">
                    <span class="question-number">@pregunta.NumeroPregunta</span>
                    <div class="question-text flex-grow-1">
                        @pregunta.TextoPregunta
                        @if (estaGuardada)
                        {
                            <i class="fas fa-check-circle text-success ms-2" title="Pregunta guardada"></i>
                        }
                    </div>
                    <span class="question-type">@pregunta.TipoPregunta</span>
                </div>
            </div>
            <div class="question-body">
                <!-- Campo oculto para identificar la pregunta -->
                <input type="hidden" name="PreguntaID_@pregunta.PreguntaID" value="@pregunta.PreguntaID" />

                <!-- Sección Principal de Respuesta -->

                <div class="section-divider"></div>

                <!-- Secciones de Evaluación Adicionales -->
                <div class="evaluation-sections">
                    <!-- Sección de Puntuación -->
                    <div class="form-section">
                        <label class="form-label success">
                            <i class="fas fa-star icon success"></i>
                            Puntuación Clínica
                        </label>
                        <input type="number" class="form-control score-input"
                               name="Puntuacion_@pregunta.PreguntaID"
                               id="puntuacion_@pregunta.PreguntaID"
                               min="0" max="3" step="1"
                               placeholder="0-3"
                               title="Puntuación del 0 al 3"
                               value="@(respuestaGuardada?.Puntuacion?.ToString() ?? "")">
                        <small class="text-muted">Puntuación del 0 al 3 según criterios clínicos</small>
                    </div>

                    <!-- Sección de Comentarios -->
                    <div class="form-section">
                        <label class="form-label warning">
                            <i class="fas fa-comment-alt icon warning"></i>
                            Comentarios Evaluativos
                        </label>
                        <textarea class="form-control textarea-field"
                                  name="Comentarios_@pregunta.PreguntaID"
                                  id="comentarios_@pregunta.PreguntaID"
                                  placeholder="Añada comentarios sobre la evaluación, interpretación o consideraciones especiales...">@(respuestaGuardada?.Comentarios ?? "")</textarea>
                    </div>
                </div>

                <div class="section-divider"></div>

                <!-- Sección de Observaciones Detalladas -->
                <div class="form-section">
                    <label class="form-label info">
                        <i class="fas fa-eye icon info"></i>
                        Observaciones Clínicas Detalladas
                    </label>
                    <textarea class="form-control textarea-field large"
                              name="Observaciones_@pregunta.PreguntaID"
                              id="observaciones_@pregunta.PreguntaID"
                              placeholder="Describa las observaciones específicas, comportamientos observados, contexto de la evaluación, reacciones del paciente, etc...">@(respuestaGuardada?.Observaciones ?? "")</textarea>
                    <small class="text-muted">
                        <i class="fas fa-lightbulb"></i>
                        Incluya detalles sobre comportamientos, reacciones, contexto y cualquier observación relevante para el diagnóstico
                    </small>
                </div>

                <!-- Botón de guardado individual -->
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <form method="post" asp-action="GuardarRespuestaIndividual" style="display: inline;">
                        <input type="hidden" name="EvaluacionID" value="@Model.EvaluacionID" />
                        <input type="hidden" name="PreguntaID" value="@pregunta.PreguntaID" />
                        <input type="hidden" name="Puntuacion" value="" id="hidden-puntuacion-@pregunta.PreguntaID" />
                        <input type="hidden" name="Comentarios" value="" id="hidden-comentarios-@pregunta.PreguntaID" />
                        <input type="hidden" name="Observaciones" value="" id="hidden-observaciones-@pregunta.PreguntaID" />

                        <button type="submit"
                                class="btn-save-individual @(estaGuardada ? "saved" : "")"
                                onclick="copiarValores(@pregunta.PreguntaID)"
                                id="btn-save-@pregunta.PreguntaID">
                            <i class="fas fa-@(estaGuardada ? "check" : "save") me-2"></i>
                            @(estaGuardada ? "Actualizar pregunta" : "Guardar esta pregunta")
                        </button>
                    </form>

                    <div class="save-status" id="status-@pregunta.PreguntaID">
                        @if (TempData["SuccessPregunta"] != null && TempData["PreguntaID"]?.ToString() == pregunta.PreguntaID.ToString())
                        {
                            <div class="save-status success">
                                <i class="fas fa-check-circle me-1"></i>@TempData["SuccessPregunta"]
                            </div>
                        }
                        @if (TempData["ErrorPregunta"] != null && TempData["PreguntaID"]?.ToString() == pregunta.PreguntaID.ToString())
                        {
                            <div class="save-status error">
                                <i class="fas fa-exclamation-triangle me-1"></i>@TempData["ErrorPregunta"]
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        function copiarValores(preguntaID) {
            // Copiar valores a los campos hidden antes del submit
            const puntuacion = document.getElementById(`puntuacion_${preguntaID}`)?.value || "";
            const comentarios = document.getElementById(`comentarios_${preguntaID}`)?.value || "";
            const observaciones = document.getElementById(`observaciones_${preguntaID}`)?.value || "";

            document.getElementById(`hidden-puntuacion-${preguntaID}`).value = puntuacion;
            document.getElementById(`hidden-comentarios-${preguntaID}`).value = comentarios;
            document.getElementById(`hidden-observaciones-${preguntaID}`).value = observaciones;
        }

        function updateProgress() {
            const inputs = document.querySelectorAll('input[type="number"], textarea');
            const totalFields = inputs.length;
            let filledFields = 0;

            inputs.forEach(input => {
                if (input.value && input.value.trim() !== '') {
                    filledFields++;
                }
            });

            const percentage = totalFields > 0 ? Math.round((filledFields / totalFields) * 100) : 0;
            const progressBar = document.getElementById('progress-bar');
            const progressText = document.getElementById('progress-text');

            if (progressBar && progressText) {
                progressBar.style.width = percentage + '%';
                progressText.textContent = percentage + '% completado';
            }
        }

        function validateScore(input) {
            const value = parseFloat(input.value);
            if (value < 0) input.value = 0;
            if (value > 3) input.value = 3;
        }

        // Inicialización
        document.addEventListener('DOMContentLoaded', function() {
            updateProgress();

            // Validación para campos de puntuación
            document.querySelectorAll('input[type="number"]').forEach(input => {
                input.addEventListener('blur', function() {
                    validateScore(this);
                });
                input.addEventListener('input', function() {
                    if (this.value > 3) this.value = 3;
                    if (this.value < 0) this.value = 0;
                    updateProgress();
                });
            });

            // Auto-resize para textareas
            document.querySelectorAll('textarea').forEach(textarea => {
                textarea.addEventListener('input', function() {
                    this.style.height = 'auto';
                    this.style.height = this.scrollHeight + 'px';
                    updateProgress();
                });
            });
        });
    </script>
</body>
</html>