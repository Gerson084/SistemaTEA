@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Todos los Pacientes";
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todos los Pacientes - Sistema TEA</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 1.5rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

            .header h1 {
                color: white;
                font-size: 1.8rem;
                font-weight: 300;
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

        .user-info {
            color: rgba(255, 255, 255, 0.9);
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .main-container {
            padding: 2rem;
            max-width: 1400px;
            margin: 0 auto;
        }

        .page-header {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .page-title {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

            .page-title h2 {
                color: #4a5568;
                font-size: 2rem;
                font-weight: 300;
                margin: 0;
            }

            .page-title .icon {
                width: 60px;
                height: 60px;
                background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                color: white;
                font-size: 1.5rem;
            }

        .stats-summary {
            display: flex;
            align-items: center;
            gap: 2rem;
            background: #f7fafc;
            padding: 1rem 1.5rem;
            border-radius: 15px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 1.8rem;
            font-weight: bold;
            color: #48bb78;
        }

        .stat-label {
            color: #718096;
            font-size: 0.9rem;
        }

        .search-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .search-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .search-input {
            flex: 1;
            min-width: 250px;
            padding: 0.8rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

            .search-input:focus {
                outline: none;
                border-color: #667eea;
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            }

        .filter-select {
            padding: 0.8rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1rem;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .filter-select:focus {
                outline: none;
                border-color: #667eea;
            }

        .patients-table-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 0;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .table-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1.5rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.2rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .export-btn {
            padding: 0.5rem 1rem;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            cursor: pointer;
        }

            .export-btn:hover {
                background: rgba(255, 255, 255, 0.3);
                color: white;
                text-decoration: none;
            }

        .patients-table {
            width: 100%;
            border-collapse: collapse;
            table-layout: fixed;
        }

            .patients-table thead {
                background: #f8fafc;
            }

            .patients-table th {
                padding: 1rem 1.5rem;
                text-align: left;
                font-weight: 600;
                color: #4a5568;
                border-bottom: 2px solid #e2e8f0;
                font-size: 0.9rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
                vertical-align: top;
            }

            .patients-table td {
                padding: 1.5rem 1.5rem;
                border-bottom: 1px solid #e2e8f0;
                transition: background-color 0.3s ease;
                vertical-align: top;
                word-wrap: break-word;
            }

            .patients-table tbody tr:hover {
                background-color: #f7fafc;
            }

            /* Anchos específicos para cada columna */
            .patients-table th:nth-child(1), .patients-table td:nth-child(1) {
                width: 20%;
            }

            .patients-table th:nth-child(2), .patients-table td:nth-child(2) {
                width: 22%;
            }

            .patients-table th:nth-child(3), .patients-table td:nth-child(3) {
                width: 22%;
            }

            .patients-table th:nth-child(4), .patients-table td:nth-child(4) {
                width: 15%;
            }

            .patients-table th:nth-child(5), .patients-table td:nth-child(5) {
                width: 12%;
            }

            .patients-table th:nth-child(6), .patients-table td:nth-child(6) {
                width: 9%;
            }

        .patient-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .patient-avatar {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 1.2rem;
            flex-shrink: 0;
        }

        .patient-details h4 {
            margin: 0 0 0.25rem 0;
            color: #2d3748;
            font-size: 1.1rem;
            font-weight: 600;
            line-height: 1.3;
        }

        .patient-details p {
            margin: 0;
            color: #718096;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .info-item {
            display: flex;
            align-items: center;
            margin-bottom: 0.5rem;
            line-height: 1.4;
        }

            .info-item:last-child {
                margin-bottom: 0;
            }

        .info-icon {
            color: #718096;
            margin-right: 0.5rem;
            width: 16px;
            flex-shrink: 0;
            text-align: center;
        }

        .info-text {
            color: #4a5568;
            font-size: 0.9rem;
            word-break: break-word;
        }

        .badge-container {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            align-items: flex-start;
        }

        .age-badge {
            padding: 0.4rem 0.8rem;
            background: #e2e8f0;
            color: #4a5568;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
        }

        .gender-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
        }

        .gender-male {
            background: #bee3f8;
            color: #2c5282;
        }

        .gender-female {
            background: #fed7e2;
            color: #97266d;
        }

        .psychologist-status {
            padding: 0.5rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
            margin-top: 0.5rem;
        }

        .status-assigned {
            background: #c6f6d5;
            color: #22543d;
        }

        .status-unassigned {
            background: #fed7d7;
            color: #c53030;
        }

        .date-container {
            text-align: center;
        }

        .date-main {
            font-weight: 600;
            color: #2d3748;
            font-size: 1rem;
            margin-bottom: 0.25rem;
        }

        .date-time {
            color: #718096;
            font-size: 0.85rem;
        }

        .observations-container {
            max-width: 100%;
            line-height: 1.5;
        }

        .observations-text {
            color: #4a5568;
            font-size: 0.9rem;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .observations-empty {
            color: #cbd5e0;
            font-style: italic;
            font-size: 0.9rem;
        }

        .btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.95);
            color: #4a5568;
            border: 2px solid #e2e8f0;
        }

            .btn-secondary:hover {
                background: white;
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
                color: #4a5568;
                text-decoration: none;
            }

        .navigation-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #718096;
        }

            .empty-state i {
                font-size: 4rem;
                margin-bottom: 1rem;
                color: #cbd5e0;
            }

            .empty-state h3 {
                margin-bottom: 0.5rem;
                color: #4a5568;
            }

        @@media (max-width: 768px) {
            .main-container

        {
            padding: 1rem;
        }

        .header {
            padding: 1rem;
            flex-direction: column;
            gap: 1rem;
            text-align: center;
        }

        .page-header {
            flex-direction: column;
            text-align: center;
        }

        .search-controls {
            flex-direction: column;
        }

        .search-input {
            min-width: 100%;
        }

        .patients-table-container {
            overflow-x: auto;
        }

        .patients-table {
            min-width: 1200px;
        }

        .navigation-section {
            flex-direction: column;
            gap: 1rem;
        }

        }</style>
</head>
<body>
    <div class="header">
        <h1><i class="fas fa-brain"></i> Sistema TEA</h1>
        <div class="user-info">
            <span><i class="fas fa-user"></i> Bienvenido, @ViewBag.NombreUsuario</span>
            <div class="navigation-section">
                <a class="btn btn-secondary" href="@Url.Action("InicioADMIN", "Login")">
                    <i class="fas fa-arrow-left"></i> Volver al Inicio
                </a>
            </div>
        </div>
    </div>

    <div class="main-container">
        <!-- Mostrar mensajes de error o éxito -->
        @if (TempData["MensajeError"] != null)
        {
            <div class="alert alert-danger" style="background: #fed7d7; color: #c53030; padding: 1rem; border-radius: 10px; margin-bottom: 1rem;">
                <i class="fas fa-exclamation-triangle"></i> @TempData["MensajeError"]
            </div>
        }

        @if (TempData["MensajeExito"] != null)
        {
            <div class="alert alert-success" style="background: #c6f6d5; color: #22543d; padding: 1rem; border-radius: 10px; margin-bottom: 1rem;">
                <i class="fas fa-check-circle"></i> @TempData["MensajeExito"]
            </div>
        }

        <div class="page-header">
            <div class="page-title">
                <div class="icon">
                    <i class="fas fa-child"></i>
                </div>
                <div>
                    <h2>Todos los Pacientes</h2>
                    <p style="margin: 0; color: #718096;">Gestión completa de pacientes registrados en el sistema</p>
                </div>
            </div>
            <div class="stats-summary">
                <div class="stat-item">
                    <div class="stat-number">@ViewBag.TotalPacientes</div>
                    <div class="stat-label">Total Pacientes</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number">@ViewBag.PacientesConPsicologo</div>
                    <div class="stat-label">Con Psicólogo</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number">@ViewBag.PacientesSinPsicologo</div>
                    <div class="stat-label">Sin Psicólogo</div>
                </div>
            </div>
        </div>

        <div class="search-section">
            <div class="search-controls">
                <input type="text" id="searchInput" class="search-input" placeholder="Buscar por nombre del paciente, padre o psicólogo...">
            </div>
        </div>

        <div class="patients-table-container">
            <div class="table-header">
                <div class="table-title">
                    <i class="fas fa-list"></i>
                    Lista de Pacientes
                </div>
            </div>

            <div id="patientsContainer">
                @if (Model != null && Model.Any())
                {
                    <table class="patients-table" id="patientsTable">
                        <thead>
                            <tr>
                                <th>Paciente</th>
                                <th>Información del Padre</th>
                                <th>Psicólogo Asignado</th>
                                <th>Edad/Género</th>
                                <th>Fecha Registro</th>
                                <th>Observaciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var paciente in Model)
                            {
                                <tr class="patient-row"
                                    data-patient-id="@paciente.PacienteID"
                                    data-gender="@paciente.Genero"
                                    data-has-psychologist="@(paciente.PsicologoAsignadoID != null ? "true" : "false")"
                                    data-age="@paciente.Edad"
                                    data-registration-date="@paciente.FechaRegistro.ToString("yyyy-MM-dd")">
                                    <td>
                                        <div class="patient-info">
                                            <div class="patient-avatar">
                                                @{
                                                    string iniciales = "";
                                                    if (!string.IsNullOrEmpty(paciente.Nombre))
                                                        iniciales += paciente.Nombre.Substring(0, 1).ToUpper();
                                                    if (!string.IsNullOrEmpty(paciente.Apellido))
                                                        iniciales += paciente.Apellido.Substring(0, 1).ToUpper();
                                                }
                                                @iniciales
                                            </div>
                                            <div class="patient-details">
                                                <h4>@paciente.Nombre @paciente.Apellido</h4>
                                                <p>ID: @paciente.PacienteID</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="info-item">
                                            <i class="fas fa-user info-icon"></i>
                                            <span class="info-text">@paciente.NombrePadre</span>
                                        </div>
                                        <div class="info-item">
                                            <i class="fas fa-envelope info-icon"></i>
                                            <span class="info-text">@paciente.EmailPadre</span>
                                        </div>
                                        @if (!string.IsNullOrEmpty(paciente.TelefonoPadre))
                                        {
                                            <div class="info-item">
                                                <i class="fas fa-phone info-icon"></i>
                                                <span class="info-text">@paciente.TelefonoPadre</span>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        @if (paciente.PsicologoAsignadoID != null)
                                        {
                                            <div class="info-item">
                                                <i class="fas fa-user-md info-icon"></i>
                                                <span class="info-text">@paciente.NombrePsicologo</span>
                                            </div>
                                            @if (!string.IsNullOrEmpty(paciente.EmailPsicologo))
                                            {
                                                <div class="info-item">
                                                    <i class="fas fa-envelope info-icon"></i>
                                                    <span class="info-text">@paciente.EmailPsicologo</span>
                                                </div>
                                            }
                                            <div class="psychologist-status status-assigned">
                                                <i class="fas fa-check-circle"></i> Asignado
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="info-item">
                                                <i class="fas fa-exclamation-triangle info-icon"></i>
                                                <span class="info-text">Sin psicólogo asignado</span>
                                            </div>
                                            <div class="psychologist-status status-unassigned">
                                                <i class="fas fa-times-circle"></i> No asignado
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <div class="badge-container">
                                            <span class="age-badge">
                                                <i class="fas fa-birthday-cake"></i>
                                                @paciente.Edad años
                                            </span>
                                            <span class="gender-badge @(paciente.Genero == "M" ? "gender-male" : "gender-female")">
                                                <i class="fas fa-@(paciente.Genero == "M" ? "mars" : "venus")"></i>
                                                @(paciente.Genero == "M" ? "Masculino" : "Femenino")
                                            </span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="date-container">
                                            <div class="date-main">@paciente.FechaRegistro.ToString("dd/MM/yyyy")</div>
                                            <div class="date-time">@paciente.FechaRegistro.ToString("HH:mm")</div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="observations-container">
                                            @if (!string.IsNullOrEmpty(paciente.Observaciones))
                                            {
                                                <div class="observations-text" title="@paciente.Observaciones">
                                                    @paciente.Observaciones
                                                </div>
                                            }
                                            else
                                            {
                                                <span class="observations-empty">Sin observaciones</span>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-child"></i>
                        <h3>No hay pacientes registrados</h3>
                        <p>Actualmente no existen pacientes registrados en el sistema.</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initializeSearch();
            initializeFilters();
            animateRows();
        });

        function initializeSearch() {
            const searchInput = document.getElementById('searchInput');
            searchInput.addEventListener('input', function() {
                filterPatients();
            });
        }

        function initializeFilters() {
            const filterSelect = document.getElementById('filterSelect');
            const sortSelect = document.getElementById('sortSelect');

            filterSelect.addEventListener('change', filterPatients);
            if (sortSelect) sortSelect.addEventListener('change', sortPatients);
        }

        function filterPatients() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const filterValue = document.getElementById('filterSelect').value;
            const rows = document.querySelectorAll('.patient-row');

            let visibleCount = 0;
            let assignedCount = 0;
            let unassignedCount = 0;

            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                const gender = row.dataset.gender;
                const hasPsychologist = row.dataset.hasPsychologist === "true";

                let matchesSearch = text.includes(searchTerm);
                let matchesFilter = true;

                if (filterValue === 'assigned') {
                    matchesFilter = hasPsychologist;
                } else if (filterValue === 'unassigned') {
                    matchesFilter = !hasPsychologist;
                } else if (filterValue === 'male') {
                    matchesFilter = gender === 'M';
                } else if (filterValue === 'female') {
                    matchesFilter = gender === 'F';
                }

                if (matchesSearch && matchesFilter) {
                    row.style.display = '';
                    visibleCount++;
                    if (hasPsychologist) {
                        assignedCount++;
                    } else {
                        unassignedCount++;
                    }
                } else {
                    row.style.display = 'none';
                }
            });

            // Actualizar estadísticas
            updateStatsDisplay(visibleCount, assignedCount, unassignedCount);
        }

        function sortPatients() {
            const sortValue = document.getElementById('sortSelect').value;
            const tbody = document.querySelector('.patients-table tbody');
            if (!tbody) return;

            const rows = Array.from(document.querySelectorAll('.patient-row'));

            let sortedRows;

            switch(sortValue) {
                case 'name':
                    sortedRows = rows.sort((a, b) => {
                        const nameA = a.querySelector('.patient-details h4').textContent.trim();
                        const nameB = b.querySelector('.patient-details h4').textContent.trim();
                        return nameA.localeCompare(nameB, 'es');
                    });
                    break;
                case 'age':
                    sortedRows = rows.sort((a, b) => {
                        const ageA = parseInt(a.dataset.age);
                        const ageB = parseInt(b.dataset.age);
                        return ageB - ageA; // Mayor a menor
                    });
                    break;
                case 'date':
                    sortedRows = rows.sort((a, b) => {
                        const dateA = new Date(a.dataset.registrationDate);
                        const dateB = new Date(b.dataset.registrationDate);
                        return dateB - dateA; // Más reciente primero
                    });
                    break;
                default:
                    sortedRows = rows;
            }

            sortedRows.forEach(row => tbody.appendChild(row));
        }

        function updateStatsDisplay(total, assigned, unassigned) {
            const totalElement = document.querySelector('.stat-number:first-child');
            const assignedElement = document.querySelectorAll('.stat-number')[1];
            const unassignedElement = document.querySelectorAll('.stat-number')[2];

            if (totalElement) totalElement.textContent = total;
            if (assignedElement) assignedElement.textContent = assigned;
            if (unassignedElement) unassignedElement.textContent = unassigned;
        }

        function animateRows() {
            const rows = document.querySelectorAll('.patient-row');
            rows.forEach((row, index) => {
                row.style.opacity = '0';
                row.style.transform = 'translateY(20px)';

                setTimeout(() => {
                    row.style.transition = 'all 0.6s ease';
                    row.style.opacity = '1';
                    row.style.transform = 'translateY(0)';
                }, index * 50);
            });
        }

       

 
    }
}
}
    </script>
</body>
</html>