@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Todos los Pacientes";
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todos los Pacientes - Sistema TEA</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .header {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(15px);
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

            .header h1 {
                color: white;
                font-size: 1.6rem;
                font-weight: 300;
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

                .header h1 i {
                    color: #ffd700;
                }

        .header-right {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .user-info {
            background: rgba(255, 255, 255, 0.2);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            color: white;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-back {
            padding: 0.6rem 1.2rem;
            background: rgba(108, 117, 125, 0.9);
            color: white;
            border: none;
            border-radius: 20px;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
        }

            .btn-back:hover {
                background: rgba(108, 117, 125, 1);
                transform: translateY(-2px);
            }

        .main-container {
            padding: 2rem;
            max-width: 1400px;
            margin: 0 auto;
        }

        .page-header {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .page-title {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

            .page-title h2 {
                color: #4a5568;
                font-size: 2rem;
                font-weight: 300;
                margin: 0;
            }

            .page-title .icon {
                width: 60px;
                height: 60px;
                background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                color: white;
                font-size: 1.5rem;
            }

        .stats-summary {
            display: flex;
            align-items: center;
            gap: 2rem;
            background: #f7fafc;
            padding: 1rem 1.5rem;
            border-radius: 15px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 1.8rem;
            font-weight: bold;
            color: #48bb78;
        }

        .stat-label {
            color: #718096;
            font-size: 0.9rem;
        }

        .search-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .search-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .search-input {
            flex: 1;
            min-width: 250px;
            padding: 0.8rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

            .search-input:focus {
                outline: none;
                border-color: #667eea;
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            }

        .filter-select {
            padding: 0.8rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1rem;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .filter-select:focus {
                outline: none;
                border-color: #667eea;
            }

        .patients-table-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 0;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .table-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1.5rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.2rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .export-btn {
            padding: 0.5rem 1rem;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            cursor: pointer;
        }

            .export-btn:hover {
                background: rgba(255, 255, 255, 0.3);
                color: white;
                text-decoration: none;
            }

        .patients-table {
            width: 100%;
            border-collapse: collapse;
            table-layout: fixed;
        }

            .patients-table thead {
                background: #f8fafc;
            }

            .patients-table th {
                padding: 1rem 1.5rem;
                text-align: left;
                font-weight: 600;
                color: #4a5568;
                border-bottom: 2px solid #e2e8f0;
                font-size: 0.9rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
                vertical-align: top;
            }

            .patients-table td {
                padding: 1.5rem 1.5rem;
                border-bottom: 1px solid #e2e8f0;
                transition: background-color 0.3s ease;
                vertical-align: top;
                word-wrap: break-word;
            }

            .patients-table tbody tr:hover {
                background-color: #f7fafc;
            }

            /* Anchos específicos para cada columna */
            .patients-table th:nth-child(1), .patients-table td:nth-child(1) {
                width: 18%;
            }

            .patients-table th:nth-child(2), .patients-table td:nth-child(2) {
                width: 20%;
            }

            .patients-table th:nth-child(3), .patients-table td:nth-child(3) {
                width: 20%;
            }

            .patients-table th:nth-child(4), .patients-table td:nth-child(4) {
                width: 13%;
            }

            .patients-table th:nth-child(5), .patients-table td:nth-child(5) {
                width: 11%;
            }

            .patients-table th:nth-child(6), .patients-table td:nth-child(6) {
                width: 8%;
            }

            .patients-table th:nth-child(7), .patients-table td:nth-child(7) {
                width: 10%;
            }

        .patient-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .patient-avatar {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 1.2rem;
            flex-shrink: 0;
        }

        .patient-details h4 {
            margin: 0 0 0.25rem 0;
            color: #2d3748;
            font-size: 1.1rem;
            font-weight: 600;
            line-height: 1.3;
        }

        .patient-details p {
            margin: 0;
            color: #718096;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .info-item {
            display: flex;
            align-items: center;
            margin-bottom: 0.5rem;
            line-height: 1.4;
        }

            .info-item:last-child {
                margin-bottom: 0;
            }

        .info-icon {
            color: #718096;
            margin-right: 0.5rem;
            width: 16px;
            flex-shrink: 0;
            text-align: center;
        }

        .info-text {
            color: #4a5568;
            font-size: 0.9rem;
            word-break: break-word;
        }

        .badge-container {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            align-items: flex-start;
        }

        .age-badge {
            padding: 0.4rem 0.8rem;
            background: #e2e8f0;
            color: #4a5568;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
        }

        .gender-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
        }

        .gender-male {
            background: #bee3f8;
            color: #2c5282;
        }

        .gender-female {
            background: #fed7e2;
            color: #97266d;
        }

        .psychologist-status {
            padding: 0.5rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
            margin-top: 0.5rem;
        }

        .status-assigned {
            background: #c6f6d5;
            color: #22543d;
        }

        .status-unassigned {
            background: #fed7d7;
            color: #c53030;
        }

        .date-container {
            text-align: center;
        }

        .date-main {
            font-weight: 600;
            color: #2d3748;
            font-size: 1rem;
            margin-bottom: 0.25rem;
        }

        .date-time {
            color: #718096;
            font-size: 0.85rem;
        }

        .observations-container {
            max-width: 100%;
            line-height: 1.5;
        }

        .observations-text {
            color: #4a5568;
            font-size: 0.9rem;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .observations-empty {
            color: #cbd5e0;
            font-style: italic;
            font-size: 0.9rem;
        }

        .btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.95);
            color: #4a5568;
            border: 2px solid #e2e8f0;
        }

            .btn-secondary:hover {
                background: white;
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
                color: #4a5568;
                text-decoration: none;
            }

        /* Botones de acción para pacientes */
        .action-buttons {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            align-items: stretch;
        }

        .btn-assign {
            padding: 0.5rem 0.8rem;
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 0.8rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.3rem;
            justify-content: center;
        }

            .btn-assign:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(72, 187, 120, 0.3);
            }

        .btn-remove {
            padding: 0.5rem 0.8rem;
            background: linear-gradient(135deg, #f56565 0%, #e53e3e 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 0.8rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.3rem;
            justify-content: center;
        }

            .btn-remove:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(245, 101, 101, 0.3);
            }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 0;
            border-radius: 15px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
            animation: modalSlideIn 0.3s ease;
        }

        @@keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: translateY(-50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1.5rem;
            border-radius: 15px 15px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin: 0;
        }

        .close {
            color: white;
            font-size: 1.5rem;
            font-weight: bold;
            cursor: pointer;
            border: none;
            background: none;
            padding: 0;
            line-height: 1;
        }

            .close:hover {
                opacity: 0.7;
            }

        .modal-body {
            padding: 2rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #4a5568;
        }

        .form-select {
            width: 100%;
            padding: 0.8rem;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1rem;
            background: white;
            transition: all 0.3s ease;
        }

            .form-select:focus {
                outline: none;
                border-color: #667eea;
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            }

        .modal-footer {
            padding: 1.5rem 2rem;
            border-top: 1px solid #e2e8f0;
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
        }

        .btn-modal-cancel {
            padding: 0.8rem 1.5rem;
            background: #e2e8f0;
            color: #4a5568;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .btn-modal-cancel:hover {
                background: #cbd5e0;
            }

        .btn-modal-confirm {
            padding: 0.8rem 1.5rem;
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .btn-modal-confirm:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(72, 187, 120, 0.3);
            }

        .navigation-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #718096;
        }

            .empty-state i {
                font-size: 4rem;
                margin-bottom: 1rem;
                color: #cbd5e0;
            }

            .empty-state h3 {
                margin-bottom: 0.5rem;
                color: #4a5568;
            }

        /* Alerts */
        .alert {
            padding: 1rem 1.5rem;
            border-radius: 10px;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .alert-success {
            background: #c6f6d5;
            color: #22543d;
            border: 1px solid #9ae6b4;
        }

        .alert-danger {
            background: #fed7d7;
            color: #c53030;
            border: 1px solid #feb2b2;
        }

        .alert-info {
            background: #bee3f8;
            color: #2c5282;
            border: 1px solid #90cdf4;
        }

        @@media (max-width: 768px) {
            .main-container {
                padding: 1rem;
            }

            .header {
                padding: 1rem;
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .page-header {
                flex-direction: column;
                text-align: center;
            }

            .search-controls {
                flex-direction: column;
            }

            .search-input {
                min-width: 100%;
            }

            .patients-table-container {
                overflow-x: auto;
            }

            .patients-table {
                min-width: 1200px;
            }

            .navigation-section {
                flex-direction: column;
                gap: 1rem;
            }

            .modal-content {
                margin: 10% auto;
                width: 95%;
            }
        }
    </style>
</head>
<body>

    <div class="header">
        <h1><i class="fas fa-brain"></i> Sistema TEA - Ver Pacientes</h1>
        <div class="header-right">
            <a href="@Url.Action("InicioADMIN", "Login")" class="btn-back">
                <i class="fas fa-arrow-left"></i> Volver
            </a>
        </div>
    </div>

    <div class="main-container">
        <!-- Mostrar mensajes de error o éxito -->
        @if (TempData["MensajeError"] != null)
        {
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-triangle"></i> @TempData["MensajeError"]
            </div>
        }

        @if (TempData["MensajeExito"] != null)
        {
            <div class="alert alert-success">
                <i class="fas fa-check-circle"></i> @TempData["MensajeExito"]
            </div>
        }

        <!-- Contenedor para mensajes dinámicos -->
        <div id="dynamicAlerts"></div>

        <div class="page-header">
            <div class="page-title">
                <div class="icon">
                    <i class="fas fa-child"></i>
                </div>
                <div>
                    <h2>Todos los Pacientes</h2>
                    <p style="margin: 0; color: #718096;">Gestión completa de pacientes registrados en el sistema</p>
                </div>
            </div>
            <div class="stats-summary">
                <div class="stat-item">
                    <div class="stat-number">@ViewBag.TotalPacientes</div>
                    <div class="stat-label">Total Pacientes</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number">@ViewBag.PacientesConPsicologo</div>
                    <div class="stat-label">Con Psicólogo</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number">@ViewBag.PacientesSinPsicologo</div>
                    <div class="stat-label">Sin Psicólogo</div>
                </div>
            </div>
        </div>

        <div class="search-section">
            <div class="search-controls">
                <input type="text" id="searchInput" class="search-input" placeholder="Buscar por nombre del paciente, padre o psicólogo...">
            </div>
        </div>

        <div class="patients-table-container">
            <div class="table-header">
                <div class="table-title">
                    <i class="fas fa-list"></i>
                    Lista de Pacientes
                </div>
            </div>

            <div id="patientsContainer">
                @if (Model != null && Model.Any())
                {
                    <table class="patients-table" id="patientsTable">
                        <thead>
                            <tr>
                                <th>Paciente</th>
                                <th>Información del Padre</th>
                                <th>Psicólogo Asignado</th>
                                <th>Edad/Género</th>
                                <th>Fecha Registro</th>
                                <th>Observaciones</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var paciente in Model)
                            {
                                <tr class="patient-row"
                                    data-patient-id="@paciente.PacienteID"
                                    data-gender="@paciente.Genero"
                                    data-has-psychologist="@(paciente.PsicologoAsignadoID != null ? "true" : "false")"
                                    data-age="@paciente.Edad"
                                    data-registration-date="@paciente.FechaRegistro.ToString("yyyy-MM-dd")">
                                    <td>
                                        <div class="patient-info">
                                            <div class="patient-avatar">
                                                @{
                                                    string iniciales = "";
                                                    if (!string.IsNullOrEmpty(paciente.Nombre))
                                                        iniciales += paciente.Nombre.Substring(0, 1).ToUpper();
                                                    if (!string.IsNullOrEmpty(paciente.Apellido))
                                                        iniciales += paciente.Apellido.Substring(0, 1).ToUpper();
                                                }
                                                @iniciales
                                            </div>
                                            <div class="patient-details">
                                                <h4>@paciente.Nombre @paciente.Apellido</h4>
                                                <p>ID: @paciente.PacienteID</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="info-item">
                                            <i class="fas fa-user info-icon"></i>
                                            <span class="info-text">@paciente.NombrePadre</span>
                                        </div>
                                        <div class="info-item">
                                            <i class="fas fa-envelope info-icon"></i>
                                            <span class="info-text">@paciente.EmailPadre</span>
                                        </div>
                                        @if (!string.IsNullOrEmpty(paciente.TelefonoPadre))
                                        {
                                            <div class="info-item">
                                                <i class="fas fa-phone info-icon"></i>
                                                <span class="info-text">@paciente.TelefonoPadre</span>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <div class="psychologist-info" id="psychologist-info-@paciente.PacienteID">
                                            @if (paciente.PsicologoAsignadoID != null)
                                            {
                                                <div class="info-item">
                                                    <i class="fas fa-user-md info-icon"></i>
                                                    <span class="info-text">@paciente.NombrePsicologo</span>
                                                </div>
                                                @if (!string.IsNullOrEmpty(paciente.EmailPsicologo))
                                                {
                                                    <div class="info-item">
                                                        <i class="fas fa-envelope info-icon"></i>
                                                        <span class="info-text">@paciente.EmailPsicologo</span>
                                                    </div>
                                                }
                                                <div class="psychologist-status status-assigned">
                                                    <i class="fas fa-check-circle"></i> Asignado
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="info-item">
                                                    <i class="fas fa-exclamation-triangle info-icon"></i>
                                                    <span class="info-text">Sin psicólogo asignado</span>
                                                </div>
                                                <div class="psychologist-status status-unassigned">
                                                    <i class="fas fa-times-circle"></i> No asignado
                                                </div>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="badge-container">
                                            <span class="age-badge">
                                                <i class="fas fa-birthday-cake"></i> @paciente.Edad años
                                            </span>
                                            <span class="gender-badge @(paciente.Genero == "M" ? "gender-male" : "gender-female")">
                                                <i class="fas @(paciente.Genero == "M" ? "fa-mars" : "fa-venus")"></i>
                                                @(paciente.Genero == "M" ? "Masculino" : "Femenino")
                                            </span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="date-container">
                                            <div class="date-main">@paciente.FechaRegistro.ToString("dd/MM/yyyy")</div>
                                            <div class="date-time">@paciente.FechaRegistro.ToString("HH:mm")</div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="observations-container">
                                            @if (!string.IsNullOrEmpty(paciente.Observaciones))
                                            {
                                                <div class="observations-text">@paciente.Observaciones</div>
                                            }
                                            else
                                            {
                                                <div class="observations-empty">Sin observaciones</div>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            @if (paciente.PsicologoAsignadoID == null)
                                            {
                                                <button class="btn-assign" onclick="openAssignModal(@paciente.PacienteID, '@paciente.Nombre @paciente.Apellido')">
                                                    <i class="fas fa-user-plus"></i> Asignar Psicólogo
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="btn-remove" onclick="removePsychologist(@paciente.PacienteID, '@paciente.Nombre @paciente.Apellido')">
                                                    <i class="fas fa-user-minus"></i> Remover Psicólogo
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-child"></i>
                        <h3>No hay pacientes registrados</h3>
                        <p>No se encontraron pacientes en el sistema.</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Modal para Asignar Psicólogo -->
    <div id="assignModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Asignar Psicólogo</h3>
                <button class="close" onclick="closeModal('assignModal')">&times;</button>
            </div>
            <div class="modal-body">
                <form id="assignForm">
                    <input type="hidden" id="assignPatientId" name="pacienteId" />
                    <div class="form-group">
                        <label class="form-label">Paciente:</label>
                        <div id="assignPatientName" style="padding: 0.8rem; background: #f7fafc; border-radius: 8px; color: #4a5568; font-weight: 600;"></div>
                    </div>
                    <div class="form-group">
                        <label for="psychologistSelect" class="form-label">Seleccionar Psicólogo:</label>
                        <select id="psychologistSelect" name="psicologoId" class="form-select" required>
                            <option value="">Seleccione un psicólogo...</option>
                            @if (ViewBag.Psicologos != null)
                            {
                                @foreach (var psicologo in ViewBag.Psicologos)
                                {
                                    <option value="@psicologo.UsuarioID">@psicologo.NombreCompleto</option>
                                }
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-modal-cancel" onclick="closeModal('assignModal')">Cancelar</button>
                <button type="button" class="btn-modal-confirm" onclick="assignPsychologist()">Asignar</button>
            </div>
        </div>
    </div>

    <!-- Token antifalsificación para AJAX -->
    @Html.AntiForgeryToken()

    <script>
        // Función para buscar pacientes
        document.getElementById('searchInput').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const rows = document.querySelectorAll('.patient-row');

            rows.forEach(row => {
                const patientName = row.querySelector('.patient-details h4').textContent.toLowerCase();
                const parentName = row.querySelector('.info-text').textContent.toLowerCase();
                const psychologistInfo = row.querySelector('.psychologist-info').textContent.toLowerCase();

                if (patientName.includes(searchTerm) ||
                    parentName.includes(searchTerm) ||
                    psychologistInfo.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });

        // Función para abrir el modal de asignación
        function openAssignModal(patientId, patientName) {
            document.getElementById('assignPatientId').value = patientId;
            document.getElementById('assignPatientName').textContent = patientName;
            document.getElementById('psychologistSelect').value = '';
            document.getElementById('assignModal').style.display = 'block';
        }

        // Función para cerrar modales
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // Función para asignar psicólogo
        function assignPsychologist() {
            const form = document.getElementById('assignForm');
            const formData = new FormData(form);
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            if (!formData.get('psicologoId')) {
                showAlert('danger', 'Por favor seleccione un psicólogo.');
                return;
            }

            // Mostrar loading
            const confirmBtn = document.querySelector('.btn-modal-confirm');
            const originalText = confirmBtn.textContent;
            confirmBtn.textContent = 'Asignando...';
            confirmBtn.disabled = true;

            fetch('@Url.Action("AsignarPsicologo", "Pacientes")', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token
                },
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert('success', data.message);
                    closeModal('assignModal');
                    updatePatientPsychologistInfo(formData.get('pacienteId'), data.psicologoNombre, data.psicologoEmail);
                } else {
                    showAlert('danger', data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('danger', 'Error de conexión. Intente nuevamente.');
            })
            .finally(() => {
                confirmBtn.textContent = originalText;
                confirmBtn.disabled = false;
            });
        }

        // Función para remover psicólogo
        function removePsychologist(patientId, patientName) {
            if (!confirm(`¿Está seguro de que desea remover el psicólogo asignado al paciente ${patientName}?`)) {
                return;
            }

            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            const formData = new FormData();
            formData.append('pacienteId', patientId);

            fetch('@Url.Action("RemoverPsicologo", "Pacientes")', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token
                },
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert('success', data.message);
                    removePsychologistInfo(patientId);
                } else {
                    showAlert('danger', data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('danger', 'Error de conexión. Intente nuevamente.');
            });
        }

        // Función para actualizar la información del psicólogo en la tabla
        function updatePatientPsychologistInfo(patientId, psychologistName, psychologistEmail) {
            const row = document.querySelector(`[data-patient-id="${patientId}"]`);
            const psychologistInfoDiv = row.querySelector(`#psychologist-info-${patientId}`);
            const actionButtonsDiv = row.querySelector('.action-buttons');

            // Actualizar información del psicólogo
            psychologistInfoDiv.innerHTML = `
                <div class="info-item">
                    <i class="fas fa-user-md info-icon"></i>
                    <span class="info-text">${psychologistName}</span>
                </div>
                <div class="info-item">
                    <i class="fas fa-envelope info-icon"></i>
                    <span class="info-text">${psychologistEmail}</span>
                </div>
                <div class="psychologist-status status-assigned">
                    <i class="fas fa-check-circle"></i> Asignado
                </div>
            `;

            // Actualizar botones de acción
            actionButtonsDiv.innerHTML = `
                <button class="btn-remove" onclick="removePsychologist(${patientId}, '${row.querySelector('.patient-details h4').textContent}')">
                    <i class="fas fa-user-minus"></i> Remover Psicólogo
                </button>
            `;

            // Actualizar atributo data
            row.setAttribute('data-has-psychologist', 'true');
        }

        // Función para remover la información del psicólogo de la tabla
        function removePsychologistInfo(patientId) {
            const row = document.querySelector(`[data-patient-id="${patientId}"]`);
            const psychologistInfoDiv = row.querySelector(`#psychologist-info-${patientId}`);
            const actionButtonsDiv = row.querySelector('.action-buttons');
            const patientName = row.querySelector('.patient-details h4').textContent;

            // Actualizar información del psicólogo
            psychologistInfoDiv.innerHTML = `
                <div class="info-item">
                    <i class="fas fa-exclamation-triangle info-icon"></i>
                    <span class="info-text">Sin psicólogo asignado</span>
                </div>
                <div class="psychologist-status status-unassigned">
                    <i class="fas fa-times-circle"></i> No asignado
                </div>
            `;

            // Actualizar botones de acción
            actionButtonsDiv.innerHTML = `
                <button class="btn-assign" onclick="openAssignModal(${patientId}, '${patientName}')">
                    <i class="fas fa-user-plus"></i> Asignar Psicólogo
                </button>
            `;

            // Actualizar atributo data
            row.setAttribute('data-has-psychologist', 'false');
        }

        // Función para mostrar alertas dinámicas
        function showAlert(type, message) {
            const alertsContainer = document.getElementById('dynamicAlerts');
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type}`;

            const icon = type === 'success' ? 'fa-check-circle' :
                        type === 'danger' ? 'fa-exclamation-triangle' :
                        'fa-info-circle';

            alertDiv.innerHTML = `
                <i class="fas ${icon}"></i> ${message}
            `;

            alertsContainer.appendChild(alertDiv);

            // Remover la alerta después de 5 segundos
            setTimeout(() => {
                alertDiv.remove();
            }, 5000);

            // Scroll hacia la alerta
            alertDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }

        // Cerrar modales al hacer clic fuera de ellos
        window.onclick = function(event) {
            const assignModal = document.getElementById('assignModal');
            if (event.target === assignModal) {
                closeModal('assignModal');
            }
        }

        // Cerrar modales con la tecla Escape
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeModal('assignModal');
            }
        });
    </script>

</body>
</html>