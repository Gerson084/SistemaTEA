@model SistemaTEA.Models.PreguntaADIR
@{
    ViewData["Title"] = "Crear Pregunta ADI-R";
    Layout = null;
}
<!DOCTYPE html>

<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Pregunta ADI-R - Sistema TEA</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

            .header h1 {
                color: white;
                font-size: 1.8rem;
                font-weight: 300;
            }

        .user-info {
            color: white;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

            .user-info i {
                font-size: 1.2rem;
            }

        .main-container {
            padding: 2rem;
            max-width: 1000px;
            margin: 0 auto;
        }

        .back-btn {
            position: fixed;
            top: 1rem;
            left: 1rem;
            padding: 0.5rem 1rem;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            text-decoration: none;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            gap: 0.5rem;
            z-index: 1000;
        }

            .back-btn:hover {
                background: rgba(255, 255, 255, 0.3);
                transform: translateY(-2px);
                color: white;
                text-decoration: none;
            }

        .page-header {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            text-align: center;
            animation: fadeInDown 0.8s ease;
        }

            .page-header h2 {
                color: #4a5568;
                margin-bottom: 0.5rem;
                font-size: 2.2rem;
                font-weight: 300;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 1rem;
            }

            .page-header p {
                color: #718096;
                font-size: 1.1rem;
                line-height: 1.6;
                max-width: 600px;
                margin: 0 auto;
            }

        .form-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 2.5rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            animation: fadeInUp 0.8s ease;
        }

        .form-section {
            margin-bottom: 2rem;
            padding: 1.5rem;
            background: #f7fafc;
            border-radius: 15px;
            border-left: 4px solid #667eea;
        }

        .section-title {
            color: #2d3748;
            font-size: 1.3rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

            .form-group label {
                display: block;
                margin-bottom: 0.5rem;
                color: #2d3748;
                font-weight: 500;
                font-size: 1rem;
            }

            .form-group input,
            .form-group textarea,
            .form-group select {
                width: 100%;
                padding: 0.8rem 1rem;
                border: 2px solid #e2e8f0;
                border-radius: 10px;
                font-size: 1rem;
                transition: all 0.3s ease;
                background: white;
            }

                .form-group input:focus,
                .form-group textarea:focus,
                .form-group select:focus {
                    outline: none;
                    border-color: #667eea;
                    box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
                    transform: translateY(-1px);
                }

            .form-group textarea {
                resize: vertical;
                min-height: 120px;
                font-family: inherit;
            }

        .input-group {
            position: relative;
        }

            .input-group i {
                position: absolute;
                left: 1rem;
                top: 50%;
                transform: translateY(-50%);
                color: #718096;
                z-index: 1;
            }

            .input-group input,
            .input-group select,
            .input-group textarea {
                padding-left: 2.5rem;
            }

        .radio-group {
            display: flex;
            gap: 1.5rem;
            flex-wrap: wrap;
            margin-top: 0.5rem;
        }

        .radio-option {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.8rem 1.2rem;
            background: white;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            min-width: 120px;
        }

            .radio-option:hover {
                border-color: #667eea;
                background: #f0f4ff;
            }

            .radio-option input[type="radio"] {
                width: auto;
                margin: 0;
            }

            .radio-option.selected {
                border-color: #667eea;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
            }

        .btn {
            padding: 0.8rem 2rem;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
            white-space: nowrap;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
            color: white;
        }

        .btn-secondary {
            background: #e2e8f0;
            color: #4a5568;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            text-decoration: none;
        }

        .btn-primary:hover {
            color: white;
        }

        .btn-success:hover {
            color: white;
        }

        .form-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid #e2e8f0;
        }

        .help-text {
            font-size: 0.85rem;
            color: #718096;
            margin-top: 0.3rem;
            font-style: italic;
        }

        .preview-section {
            background: #f0f4ff;
            border: 2px dashed #667eea;
            border-radius: 15px;
            padding: 1.5rem;
            margin-top: 1.5rem;
        }

        .preview-title {
            color: #4a5568;
            font-weight: 600;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .preview-content {
            background: white;
            padding: 1.5rem;
            border-radius: 10px;
            border: 1px solid #e2e8f0;
        }

        .question-preview {
            font-size: 1.1rem;
            color: #2d3748;
            margin-bottom: 1rem;
            line-height: 1.6;
        }

        .area-badge {
            display: inline-block;
            padding: 0.3rem 0.8rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            font-size: 0.85rem;
            font-weight: 500;
            margin-bottom: 1rem;
        }

        .question-type-badge {
            display: inline-block;
            padding: 0.3rem 0.8rem;
            background: #edf2f7;
            color: #4a5568;
            border-radius: 15px;
            font-size: 0.85rem;
            margin-left: 0.5rem;
        }

        .floating-save {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
            color: white;
            border: none;
            border-radius: 50px;
            padding: 1rem 1.5rem;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 10px 30px rgba(72, 187, 120, 0.3);
            transition: all 0.3s ease;
            z-index: 1000;
        }

            .floating-save:hover {
                transform: translateY(-3px);
                box-shadow: 0 15px 40px rgba(72, 187, 120, 0.4);
            }

        @@keyframes fadeInDown {
            from

        {
            opacity: 0;
            transform: translateY(-30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        @@keyframes fadeInUp {
            from

        {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        @@media (max-width: 768px) {
            .main-container

        {
            padding: 1rem;
        }

        .header {
            padding: 1rem;
            flex-direction: column;
            gap: 1rem;
        }

            .header h1 {
                font-size: 1.5rem;
            }

        .page-header h2 {
            font-size: 1.8rem;
            flex-direction: column;
            gap: 0.5rem;
        }

        .form-container {
            padding: 1.5rem;
        }

        .radio-group {
            flex-direction: column;
        }

        .form-actions {
            flex-direction: column;
        }

        .floating-save {
            position: relative;
            bottom: auto;
            right: auto;
            width: 100%;
            margin-top: 1rem;
        }

        }
    </style>
</head>
<body>
    <div class="header">
        <h1><i class="fas fa-question-circle"></i> Sistema TEA - Crear Pregunta ADI-R</h1>
        <div class="user-info">
            <i class="fas fa-user-shield"></i>
            <span>@ViewBag.NombreUsuario (Administrador)</span>
        </div>
    </div>

    <div class="main-container">
        <div class="page-header">
            <h2>
                <i class="fas fa-plus-circle"></i>
                Crear Nueva Pregunta ADI-R
            </h2>
            <p>Diseña una pregunta para la entrevista diagnóstica ADI-R. Asegúrate de asignarla al área correcta y que sea apropiada para la evaluación del autismo.</p>
        </div>

        <form asp-action="CreateADIR" asp-controller="Preguntas" method="post" class="form-container" id="createQuestionForm">
            @Html.AntiForgeryToken()

            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-layer-group"></i>
                    Clasificación de la Pregunta
                </h3>

                <div class="form-group">
                    <label asp-for="AreaID">Área de Evaluación</label>
                    <div class="input-group">
                        <i class="fas fa-tags"></i>
                        <select asp-for="AreaID" required>
                            <option value="">Selecciona un área...</option>
                            @if (ViewBag.Areas != null)
                            {
                                @foreach (var area in ViewBag.Areas)
                                {
                                    <option value="@area.AreaID">@area.NombreArea</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="help-text">Selecciona el área específica de evaluación a la que pertenece esta pregunta</div>
                </div>

                <div class="form-group">
                    <label asp-for="TipoPregunta">Tipo de Pregunta</label>
                    <div class="input-group">
                        <i class="fas fa-list-alt"></i>
                        <select asp-for="TipoPregunta" required>
                            <option value="">Selecciona el tipo...</option>
                            <option value="Comportamiento Actual">Comportamiento Actual</option>
                            <option value="Historia Temprana">Historia Temprana</option>
                            <option value="Comunicación">Comunicación</option>
                            <option value="Interacción Social">Interacción Social</option>
                            <option value="Juego">Juego</option>
                            <option value="Comportamiento Repetitivo">Comportamiento Repetitivo</option>
                            <option value="Desarrollo General">Desarrollo General</option>
                        </select>
                    </div>
                    <div class="help-text">Especifica el tipo de evaluación que representa esta pregunta</div>
                </div>
            </div>

            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-edit"></i>
                    Contenido de la Pregunta
                </h3>

                <div class="form-group">
                    <label asp-for="TextoPregunta">Texto de la Pregunta</label>
                    <div class="input-group">
                        <i class="fas fa-question"></i>
                        <textarea asp-for="TextoPregunta" placeholder="Escribe aquí la pregunta completa para la entrevista ADI-R..." required></textarea>
                    </div>
                    <div class="help-text">Redacta la pregunta de forma clara y específica para la entrevista clínica</div>
                </div>
            </div>

            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-cogs"></i>
                    Configuración
                </h3>

                <div class="form-group">
                    <label>Estado de la Pregunta</label>
                    <div class="radio-group">
                        <div class="radio-option selected">
                            <input type="radio" name="EsActiva" value="true" id="activa" checked>
                            <label for="activa">Activa</label>
                        </div>
                        <div class="radio-option">
                            <input type="radio" name="EsActiva" value="false" id="inactiva">
                            <label for="inactiva">Inactiva</label>
                        </div>
                    </div>
                    <div class="help-text">Las preguntas activas aparecerán en las evaluaciones</div>
                </div>
            </div>

            <div class="preview-section">
                <h3 class="preview-title">
                    <i class="fas fa-eye"></i>
                    Vista Previa de la Pregunta
                </h3>
                <div class="preview-content">
                    <div>
                        <span class="area-badge" id="areaPreview">Área no seleccionada</span>
                        <span class="question-type-badge" id="typePreview">Tipo no seleccionado</span>
                    </div>
                    <div class="question-preview" id="questionPreview">
                        Tu pregunta aparecerá aquí...
                    </div>
                </div>
            </div>

            <div class="form-actions">
                <a href="@Url.Action("InicioADMIN", "Login")" class="btn btn-secondary">
                    <i class="fas fa-times"></i> Cancelar
                </a>
                <button type="button" class="btn btn-primary" onclick="previewQuestion()">
                    <i class="fas fa-eye"></i> Vista Previa
                </button>
                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save"></i> Guardar Pregunta
                </button>
            </div>
        </form>
    </div>

    <button type="submit" form="createQuestionForm" class="floating-save">
        <i class="fas fa-save"></i> Guardar
    </button>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Mostrar mensajes de error si existen
        @if (TempData["Error"] != null)
        {
            <text>
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: '@System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(TempData["Error"]?.ToString())',
                            background: 'rgba(255, 255, 255, 0.95)',
                            backdrop: 'rgba(0, 0, 0, 0.4)',
                            confirmButtonColor: '#667eea'
                        });
            </text>
        }

            // Elementos del formulario
            const textoPregunta = document.querySelector('textarea[name="TextoPregunta"]');
            const areaSelect = document.querySelector('select[name="AreaID"]');
            const tipoSelect = document.querySelector('select[name="TipoPregunta"]');

            // Elementos de vista previa
            const questionPreview = document.getElementById('questionPreview');
            const areaPreview = document.getElementById('areaPreview');
            const typePreview = document.getElementById('typePreview');

            // Funciones de actualización de vista previa
            function updateQuestionPreview() {
                const texto = textoPregunta.value || 'Tu pregunta aparecerá aquí...';
                questionPreview.textContent = texto;
            }

            function updateAreaPreview() {
                const selectedOption = areaSelect.options[areaSelect.selectedIndex];
                const areaText = selectedOption.text !== 'Selecciona un área...' ? selectedOption.text : 'Área no seleccionada';
                areaPreview.textContent = areaText;
            }

            function updateTypePreview() {
                const selectedOption = tipoSelect.options[tipoSelect.selectedIndex];
                const tipoText = selectedOption.text !== 'Selecciona el tipo...' ? selectedOption.text : 'Tipo no seleccionado';
                typePreview.textContent = tipoText;
            }

            // Event listeners
            if (textoPregunta) {
                textoPregunta.addEventListener('input', updateQuestionPreview);
            }

            if (areaSelect) {
                areaSelect.addEventListener('change', updateAreaPreview);
            }

            if (tipoSelect) {
                tipoSelect.addEventListener('change', updateTypePreview);
            }

            // Inicializar vista previa
            updateQuestionPreview();
            updateAreaPreview();
            updateTypePreview();

            // Manejo de radio buttons
            const radioOptions = document.querySelectorAll('.radio-option');
            radioOptions.forEach(option => {
                option.addEventListener('click', function() {
                    const radio = this.querySelector('input[type="radio"]');
                    if (!radio) return;

                    radio.checked = true;
                    const groupName = radio.name;

                    // Remover selección de otros radio buttons del mismo grupo
                    document.querySelectorAll(`input[name="${groupName}"]`).forEach(r => {
                        const parentOption = r.closest('.radio-option');
                        if (parentOption) {
                            parentOption.classList.remove('selected');
                        }
                    });

                    this.classList.add('selected');
                });
            });

            // Marcar radio buttons preseleccionados
            document.querySelectorAll('input[type="radio"]:checked').forEach(radio => {
                const parentOption = radio.closest('.radio-option');
                if (parentOption) {
                    parentOption.classList.add('selected');
                }
            });

            // Animación de entrada para las secciones del formulario
            const formSections = document.querySelectorAll('.form-section');
            formSections.forEach((section, index) => {
                section.style.opacity = '0';
                section.style.transform = 'translateY(20px)';

                setTimeout(() => {
                    section.style.transition = 'all 0.6s ease';
                    section.style.opacity = '1';
                    section.style.transform = 'translateY(0)';
                }, index * 200);
            });
        });

        // Función para mostrar vista previa
        function previewQuestion() {
            const textoPregunta = document.querySelector('textarea[name="TextoPregunta"]');
            const areaSelect = document.querySelector('select[name="AreaID"]');

            if (!textoPregunta || !textoPregunta.value.trim()) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Atención',
                    text: 'Por favor, escribe el texto de la pregunta para ver la vista previa.',
                    confirmButtonColor: '#667eea'
                });
                return;
            }

            if (!areaSelect || !areaSelect.value) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Atención',
                    text: 'Por favor, selecciona un área para ver la vista previa completa.',
                    confirmButtonColor: '#667eea'
                });
                return;
            }

            // Hacer scroll suave hacia la sección de vista previa
            const previewSection = document.querySelector('.preview-section');
            if (previewSection) {
                previewSection.scrollIntoView({
                    behavior: 'smooth',
                    block: 'center'
                });

                // Efecto visual de resaltado
                previewSection.style.background = '#e6f3ff';
                setTimeout(() => {
                    previewSection.style.background = '#f0f4ff';
                }, 1000);
            }
        }
    </script>
</body>
</html>